import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.*;

public class ExcelSorter {

    public static void main(String[] args) {
        String filePath = "input.xlsx"; // Path to the input Excel file
        String outputFilePath = "output.xlsx"; // Path to the output Excel file
        int columnToSortBy = 0; // Index of the column to sort by (0-based indexing)

        try {
            List<List<String>> data = readExcel(filePath);
            sortData(data, columnToSortBy);
            writeExcel(data, outputFilePath);
            System.out.println("Sorting and saving successful.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static List<List<String>> readExcel(String filePath) throws IOException {
        List<List<String>> data = new ArrayList<>();

        FileInputStream inputStream = new FileInputStream(new File(filePath));
        Workbook workbook = new XSSFWorkbook(inputStream);
        Sheet sheet = workbook.getSheetAt(0);

        for (Row row : sheet) {
            List<String> rowData = new ArrayList<>();
            for (Cell cell : row) {
                rowData.add(cell.toString());
            }
            data.add(rowData);
        }

        workbook.close();
        inputStream.close();

        return data;
    }

    private static void sortData(List<List<String>> data, int columnIndex) {
        Collections.sort(data, Comparator.comparing(row -> row.get(columnIndex)));
    }

    private static void writeExcel(List<List<String>> data, String filePath) throws IOException {
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet();

        for (int i = 0; i < data.size(); i++) {
            Row row = sheet.createRow(i);
            List<String> rowData = data.get(i);
            for (int j = 0; j < rowData.size(); j++) {
                Cell cell = row.createCell(j);
                cell.setCellValue(rowData.get(j));
            }
        }

        FileOutputStream outputStream = new FileOutputStream(filePath);
        workbook.write(outputStream);
        workbook.close();
        outputStream.close();
    }
}
